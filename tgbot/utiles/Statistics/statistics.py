from tgbot.utiles.Statistics import diagrams


def analiticData(ID):
    smiles = {'üòÄ': 1, 'üòÇ': 8, 'üòç': 50, 'üòä': 1, 'üò¢': 7, 'üò°': 3, 'üôÑ': 4}  # FOR TESTING

    keys = []
    values = []
    summ = 0  # —Å—É–º–º–∞ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π

    """ –†–∞–∑–¥–µ–ª—è–µ–º —Å–ª–æ–≤–∞—Ä—å –Ω–∞ –¥–≤–∞ —Å–ø–∏—Å–∫–∞ """
    for i in smiles:
        keys.append(i)
        values.append(smiles[i])

    maxValues = sorted(values, reverse=True)[:4]  # –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    maxKeys = []  # –∫–ª—é—á–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π

    """ –ü–æ–ª—É—á–∞–µ–º id –º–∞–∫—Å –∑–Ω–∞—á–µ–Ω–∏–π """
    for i in range(len(values)):
        if values[i] in maxValues:
            maxKeys.append(keys[i])
        summ += values[i]

    """ –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ """
    for i in range(4):
        maxValues[i] = smiles[maxKeys[i]]

    """ –ß–∞—Å—Ç–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–∏ """
    sizes = [round(maxValues[0] / summ, 1), round(maxValues[1] / summ, 1), round(maxValues[2] / summ, 1),
             round(maxValues[3] / summ, 1), (summ - sum(maxValues)) / summ]
    maxKeys.append('–î—Ä—É–≥–∏–µ')

    """ –í—ã–∑–æ–≤ —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã """
    return diagrams.createCircularChart(ID, maxKeys, sizes)
